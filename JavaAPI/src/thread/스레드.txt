Process(프로세스): Thread의 집합으로 하나의 exe, com, dll 프로그램을 뜻한다.
	- 특징: 프로세스간 자원(리소스: 메모리)를 공유할 수 없다.
	  따라서, 프로세스를 많이 발생시키면 자원이 바닥난다.

Thread(스레드): 반복적으로 동기홯여 실행되는 프로그램 루틴으로, 메소드 단위의
처리 모듈이다. 프로세스의 구성요소이다. 스레드는 많이 발생해도 자원을 공유함으로
프로세스에 비해 시스템의 부담이 적다.
	- 스레드를 구현하는 방법:
		1) Thread 클래스를 상속하는 방법
		2) Runnable 인터페이스를 구현하는 방법
			=> 객체지향의 취지에서는 이넡페이스를 구현하는 방식이 더 낫다.
	- 스레드의 콜백메소드:
		1) start(): JVM이 스케줄상 여유가 생겼을 때, 스레드 스케줄상 run()을 호출한다.
		2) run(): 스레드 상태에서 처리하려고 하는 모든 비즈니스로직(serviceImpl)이 구현된다.
		3) sleep(long second): 지정된 시간동안 스레드를 쉬게하고, 그 시간이 지나면 다시 작동한다. 1000이 1초이다.
		4) wait(): 현재 스레드의 무한 대기. notify() 메소드를 실행하면 재실행 된다.
		5) stop(): 스레드 실행을 종료한다.
	- 단일 스레드
		하나의 자바 프로그램 실행 상태로, main()이 태표적인 싱글 스레드이다.
	- 멀티 스레드
		= 하나의 메소드만 실행되는 것이 아닌 여러개의 메소드가 동시 다발적으로 실행되는 것으로,
		  여러개의 메소드가 지속적으로 자원(메모리)를 공유하는 것이다.
		
	- 콜백 메소드
		= 메소드를 일정 실행 순서로 미리 등록시켜 놓고 등록된 순서에 따라 자동적으로 호출하는 메소드이다.

	- 교착상태(dead lock):
		= 두 스레드가 lock을 건 상태에서 서로 lock이 풀리기를 기다리는
		  상황으로 작업이 진행되지 않고 영원히 기다리게 되는 상황이다.

	- 동기화(synchronize):
		= 현재의 공유자원을 여러개의 스레드가 이용할 때 해당 스레드만 제외하고
		나머지는 접근을 못하도록 막는 것으로, 락()--lock() 이라고 한다.
		